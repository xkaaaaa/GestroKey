name: GestroKey CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      reason:
        description: '触发原因'
        required: false
        default: '手动触发构建'

jobs:
  # 手动触发的Nuitka编译工作流
  nuitka-build:
    name: Nuitka编译
    runs-on: windows-latest
    # 仅在手动触发时运行
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: 安装依赖
        run: |
          # 安装Python依赖
          python -m pip install --upgrade pip
          pip install nuitka
          pip install -r requirements.txt
          
          # 安装ImageMagick
          choco install imagemagick -y

      - name: 构建应用程序
        run: |
          # 1. 准备图标
          New-Item -ItemType Directory -Force -Path src/assets/images | Out-Null
          
          if (-not (Test-Path -Path src/assets/images/icon.svg)) {
              Write-Error "缺少SVG图标文件: src/assets/images/icon.svg"
              exit 1
          }
          
          # 转换SVG到ICO并确保透明度保持
          magick src/assets/images/icon.svg -transparent white -background transparent -resize 256x256 icon-256.png
          magick src/assets/images/icon.svg -transparent white -background transparent -resize 128x128 icon-128.png
          magick src/assets/images/icon.svg -transparent white -background transparent -resize 64x64 icon-64.png
          magick src/assets/images/icon.svg -transparent white -background transparent -resize 48x48 icon-48.png
          magick src/assets/images/icon.svg -transparent white -background transparent -resize 32x32 icon-32.png
          magick src/assets/images/icon.svg -transparent white -background transparent -resize 16x16 icon-16.png
          magick icon-256.png icon-128.png icon-64.png icon-48.png icon-32.png icon-16.png src/assets/images/icon.ico
          Remove-Item icon-*.png
          
          # 2. 使用Nuitka编译
          python -m nuitka --standalone --enable-plugin=pyqt6 --include-data-dir=src/assets=assets --windows-icon-from-ico=src/assets/images/icon.ico --output-dir=dist --assume-yes-for-downloads src/main.py
          
          # 3. 复制必要文件并准备发布
          if (Test-Path -Path "src/assets") { Copy-Item -Path "src/assets" -Destination "dist/main.dist/assets" -Recurse -Force }
          if (Test-Path -Path "src/core") { Copy-Item -Path "src/core" -Destination "dist/main.dist/core" -Recurse -Force }
          if (Test-Path -Path "src/ui") { Copy-Item -Path "src/ui" -Destination "dist/main.dist/ui" -Recurse -Force }
          
          # 4. 重命名为最终产品名称
          Rename-Item -Path "dist/main.dist" -NewName "GestroKey-windows"

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: GestroKey-windows
          path: dist/GestroKey-windows
          retention-days: 7